<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[陈西西]]></title>
  <subtitle><![CDATA[通往架构师的路上]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://wwww.chen777.com/"/>
  <updated>2015-09-22T07:22:17.148Z</updated>
  <id>http://wwww.chen777.com/</id>
  
  <author>
    <name><![CDATA[Xixi Chain]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[hexo_question]]></title>
    <link href="http://wwww.chen777.com/2015/09/22/hexo-question/"/>
    <id>http://wwww.chen777.com/2015/09/22/hexo-question/</id>
    <published>2015-09-22T07:05:50.000Z</published>
    <updated>2015-09-22T07:22:17.148Z</updated>
    <content type="html"><![CDATA[<p>搭建hexo走了许多弯路，弯路走了很多，人也变弯了<br><img src="http://ww3.sinaimg.cn/large/0063lLoQgw1ewb8vpqwuhj301s01sweb.jpg" alt=""><br>今天归纳一下，借鉴：<a href="http://blog.csdn.net/wx_962464/article/details/44786929" target="_blank" rel="external">http://blog.csdn.net/wx_962464/article/details/44786929</a><br>next主题的设定：<a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="external">http://theme-next.iissnan.com/theme-settings.html</a><br>说说我蠢哭的事情，让各位客官高兴高兴吧。</p>
<p>搭建的时候大家都说站点配置文件加入xxxx，我一直不知道是那个配置文件，后来墨迹了十几分钟在另外的博客截图才看到是此_config.yml,然后终于找到的配置文件心里十万匹草利马奔腾，劳资终于找到了，哈哈哈，然后next主题我刚进来的时候是繁体的，这让强迫症的我要死，然后去next主题看，照着弄，就是不对。后来百度错误，原来是没在冒号后面加空格，擦。</p>
<p>然后最近在研究怎么备份，因为hexo始终在本地，如果我换了地方 我改如何继续使用，诶，可怜的我到现在也没有研究出个123，好希望人来支持我(原谅我对git的不理解，搞了很久还是有问题)，if you want help me,you can call QQ 280385556! 3ks</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>搭建hexo走了许多弯路，弯路走了很多，人也变弯了<br><img src="http://ww3.sinaimg.cn/large/0063lLoQgw1ewb8vpqwuhj301s01sweb.jpg" alt=""><br>今天归纳一下，借鉴：<a href="ht]]>
    </summary>
    
      <category term="hexo" scheme="http://wwww.chen777.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[fastJson]]></title>
    <link href="http://wwww.chen777.com/2015/09/21/fastJson/"/>
    <id>http://wwww.chen777.com/2015/09/21/fastJson/</id>
    <published>2015-09-21T01:21:12.000Z</published>
    <updated>2015-09-22T07:01:51.223Z</updated>
    <content type="html"><![CDATA[<p>Fastjson是一个Java语言编写的JSON处理器。<br>1.遵循<a href="http://json.org标准，为其官方网站收录的参考实现之一。" target="_blank" rel="external">http://json.org标准，为其官方网站收录的参考实现之一。</a><br>2.功能qiang打，支持JDK的各种类型，包括基本的JavaBean、Collection、Map、Date、Enum、泛型。<br>3.无依赖，不需要例外额外的jar，能够直接跑在JDK上。<br>4开源,使用Apache License 2.0协议开源。<a href="http://code.alibabatech.com/wiki/display/FastJSON/Home" target="_blank" rel="external">http://code.alibabatech.com/wiki/display/FastJSON/Home</a></p>
<p>下载地址：<br><a href="http://www.oschina.net/news/58783/fastjson-1-2-4" target="_blank" rel="external">http://www.oschina.net/news/58783/fastjson-1-2-4</a></p>
<p>我的使用场景：<br>由于我是对象嵌套对象，然后在JS里面把json对象转换为json字符串，使用JSON.stringify()方法。然后后台使用JSON.parseObject(String text, Class clazz),把JSON文本parse为JavaBean。</p>
<p>先看bean的结构:<br><strong>topicDTO:</strong></p>
<pre><code><span class="keyword">private</span> <span class="built_in">int</span> id;

<span class="keyword">private</span> <span class="keyword">String</span> topicTitle;        

<span class="keyword">private</span> <span class="keyword">String</span> content;

<span class="keyword">private</span> <span class="keyword">String</span> isBarrage;

*<span class="keyword">private</span> VoteDTO voteDTO*;

<span class="comment">/**
  *getter,setter
  *
   */</span>
</code></pre><p><strong>VoteDTO:</strong></p>
<pre><code><span class="keyword">private</span> <span class="built_in">int</span> id;

<span class="keyword">private</span> <span class="keyword">String</span> voteTitle;

<span class="keyword">private</span> <span class="keyword">String</span> imgUrl;

<span class="keyword">private</span> <span class="keyword">String</span> content;

<span class="comment">/**
  *getter,setter
  *
   */</span>
</code></pre><p><strong>js处理：</strong></p>
<pre><code><span class="keyword">var</span> topicDTO={};
<span class="comment">//and so on</span>
<span class="keyword">var</span> topicDTO.id=$(<span class="string">'#topicId'</span>).val();
<span class="keyword">var</span> topicStr=<span class="built_in">JSON</span>.stringify(topicDTO);
$.post(<span class="string">"admin/topic/saveTopic.action"</span>,
        {topicStr:topicStr}
    , <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>{
        <span class="keyword">var</span> status = data.result;
        <span class="keyword">if</span> (status == <span class="string">"success"</span>) {
            $.messager.alert(<span class="string">'信息'</span>, <span class="string">'话题新增成功!'</span>, <span class="string">'info'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
                close();
            });
        } <span class="keyword">else</span> {
            $.messager.alert(<span class="string">'错误'</span>, <span class="string">'话题新增失败!'</span>, <span class="string">'error'</span>);
        }
    }, <span class="string">"json"</span>);
</code></pre><p><strong>action处理:</strong></p>
<pre><code><span class="built_in">String</span> topicStr=<span class="keyword">this</span>.getRequest().getParameter(<span class="string">"topicStr"</span>);
TopicDTO dto=<span class="built_in">JSON</span>.parseObject(topicStr, topicDTO.getClass()); 
</code></pre><p>此时前台传递的值都在dto对象中，简直是神器。</p>
<p><img src="http://ww3.sinaimg.cn/large/0063lLoQgw1ewb8jgrkvaj30bl07kgm1.jpg" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Fastjson是一个Java语言编写的JSON处理器。<br>1.遵循<a href="http://json.org标准，为其官方网站收录的参考实现之一。" target="_blank" rel="external">http://json.org标准，为其官方网站收]]>
    </summary>
    
      <category term="json" scheme="http://wwww.chen777.com/tags/json/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[java timer设置]]></title>
    <link href="http://wwww.chen777.com/2015/09/18/postName/"/>
    <id>http://wwww.chen777.com/2015/09/18/postName/</id>
    <published>2015-09-18T02:38:44.000Z</published>
    <updated>2015-09-21T11:54:49.047Z</updated>
    <content type="html"><![CDATA[<p>创建timer类实现接口：ServletContextListener然后在web.xml中配置listener    </p>
<pre><code><span class="keyword">public</span> <span class="keyword">static</span> final Logger LOG = LoggerFactory.make();

<span class="comment">//时间间隔(一天)  </span>
<span class="keyword">private</span> <span class="keyword">static</span> final <span class="keyword">long</span> PERIOD_DAY = <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>;  

<span class="keyword">private</span> Timer timer;

<span class="comment">//容器摧毁</span>
<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextDestroyed</span><span class="params">(ServletContextEvent arg0)</span> </span>{
    timer.cancel();

}
</code></pre><a id="more"></a>
<pre><code><span class="comment">//容器初始化</span>
<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextInitialized</span><span class="params">(ServletContextEvent arg0)</span> </span>{
    LOG.info(<span class="string">"start timer"</span>);
    Calendar calendar = Calendar.getInstance();
      <span class="comment">/*** 定制每日2:00执行方法 ***/</span>
      calendar.<span class="built_in">set</span>(Calendar.HOUR_OF_DAY, <span class="number">2</span>);
      calendar.<span class="built_in">set</span>(Calendar.MINUTE, <span class="number">0</span>);
      calendar.<span class="built_in">set</span>(Calendar.SECOND, <span class="number">0</span>);
      Date date=calendar.getTime(); <span class="comment">//第一次执行定时任务的时间</span>

      <span class="comment">//如果第一次执行定时任务的时间 小于 当前的时间</span>
      <span class="comment">//此时要在 第一次执行定时任务的时间 加一天，以便此任务*在下个时间点执行。如果不加一天，任务会立即执行。</span>
      <span class="keyword">if</span> (date.before(<span class="keyword">new</span> Date())) {
          date = <span class="keyword">this</span>.addDay(date, <span class="number">1</span>);
      }*
    timer = <span class="keyword">new</span> Timer();  
    Task task = <span class="keyword">new</span> Task();  
    <span class="comment">//安排指定的任务在指定的时间开始进行重复的固定延迟执行。  </span>
    timer.schedule(task,date,PERIOD_DAY);  
    LOG.info(<span class="string">"start end"</span>);
}  

<span class="comment">// 增加或减少天数</span>
 <span class="function"><span class="keyword">public</span> Date <span class="title">addDay</span><span class="params">(Date date, <span class="keyword">int</span> num)</span> </span>{
  Calendar startDT = Calendar.getInstance();
  startDT.setTime(date);
  startDT.add(Calendar.DAY_OF_MONTH, num);
  <span class="keyword">return</span> startDT.getTime();
 }
<span class="comment">/** 
 * 执行内容 
 * 
 */</span>  
<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{ 
    ApplicationContext ctx= GetApplicationContext.getInstance();
    HotWordsDao hotWordsDao = (HotWordsDao) ctx.getBean(<span class="string">"hotWordsDao"</span>); 
    <span class="keyword">try</span> {
        List&lt;DailyHotWordDTO&gt; dailyList=hotWordsDao.getDailyHotWordList();
        <span class="keyword">if</span>(dailyList!=null &amp;&amp; dailyList.size()&gt;<span class="number">0</span>){
            hotWordsDao.insertHotWords(dailyList);
        }
    } <span class="keyword">catch</span> (Exception e) {
        e.printStackTrace();
    }
}

    <span class="comment">//获得注解的hotWordsDao</span>
    <span class="keyword">public</span> <span class="keyword">class</span> GetApplicationContext {
    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">class</span> ApplicationContextHolder {  
        <span class="comment">// 单例变量  </span>
        <span class="keyword">private</span> <span class="keyword">static</span> ApplicationContext AC = <span class="keyword">new</span> FileSystemXmlApplicationContext(  
                <span class="string">"classpath:applicationContext-*.xml"</span>);  
    }  


    <span class="comment">// 私有化的构造方法，保证外部的类不能通过构造器来实例化。  </span>
    <span class="function"><span class="keyword">private</span> <span class="title">GetApplicationContext</span><span class="params">()</span> </span>{  


    }  


    <span class="comment">// 获取单例对象实例  </span>
    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ApplicationContext <span class="title">getInstance</span><span class="params">()</span> </span>{  
        <span class="keyword">if</span> (ApplicationContextHolder.AC == null) {  
            ApplicationContextHolder.AC = <span class="keyword">new</span> FileSystemXmlApplicationContext(  
                    <span class="string">"classpath:applicationContext-*.xml"</span>);  
        }  
        <span class="keyword">return</span> ApplicationContextHolder.AC;  
    }  
}
</code></pre><p>web.xml中配置listener：<br><code>&lt;listener&gt;&lt;listener-class&gt;com.inveno.ccs.Timer.TimerManager&lt;listener-class&gt;&lt;/listener&gt;</code></p>
<p>总结：功能开发完成了，在完成的时候有几个地方遇到了问题:<br>1.获取不到hotWordsDao，然后折腾半天，终于搞定。<br>2.只要是服务重启就会调用task，这样业务就产生问题，然后我百度找了一个判断。</p>
<p>定时任务其实有很多，也很灵活，spring quartz/timer等等。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>创建timer类实现接口：ServletContextListener然后在web.xml中配置listener    </p>
<pre><code><span class="keyword">public</span> <span class="keyword">static</span> final Logger LOG = LoggerFactory.make();

<span class="comment">//时间间隔(一天)  </span>
<span class="keyword">private</span> <span class="keyword">static</span> final <span class="keyword">long</span> PERIOD_DAY = <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>;  

<span class="keyword">private</span> Timer timer;

<span class="comment">//容器摧毁</span>
<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextDestroyed</span><span class="params">(ServletContextEvent arg0)</span> </span>{
    timer.cancel();

}
</code></pre>]]>
    
    </summary>
    
      <category term="timer" scheme="http://wwww.chen777.com/tags/timer/"/>
    
      <category term="timer" scheme="http://wwww.chen777.com/categories/timer/"/>
    
  </entry>
  
</feed>
